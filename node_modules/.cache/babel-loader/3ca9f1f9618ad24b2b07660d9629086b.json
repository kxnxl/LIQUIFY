{"ast":null,"code":"import _defineProperty from \"/home/kunal/BLOCKCHAIN/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/home/kunal/BLOCKCHAIN/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/kunal/BLOCKCHAIN/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/kunal/BLOCKCHAIN/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/home/kunal/BLOCKCHAIN/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/kunal/BLOCKCHAIN/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/home/kunal/BLOCKCHAIN/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/kunal/BLOCKCHAIN/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/kunal/BLOCKCHAIN/defi-staking-app-starter/defi-staking-app-starter/src/components/App.js\";\nimport React, { Component } from \"react\";\nimport Navbar from \"./navbar\";\nimport Main from \"./Main\";\nimport Web3 from \"web3\";\nimport Tether from \"../truffle_abis/Tether.json\";\nimport RWD from \"../truffle_abis/RWD.json\";\nimport DecentralBank from \"../truffle_abis/DecentralBank.json\";\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert(\"No ethereum detected! check your metamask\");\n                }\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var web3, accounts, networkId, tetherData, tether, tetherBalance, rwdData, rwd, rwdBalance, decentralBankData, decentralBank, stakingBalance;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                web3 = window.web3;\n                _context2.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context2.sent;\n                this.setState({\n                  account: accounts[0]\n                });\n                _context2.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                networkId = _context2.sent;\n                // console.log(networkId);\n                //LOAD Tether TOKEN\n                tetherData = Tether.networks[networkId];\n\n                if (!tetherData) {\n                  _context2.next = 18;\n                  break;\n                }\n\n                tether = new web3.eth.Contract(Tether.abi, tetherData.address);\n                this.setState({\n                  tether: tether\n                });\n                _context2.next = 14;\n                return tether.methods.balanceOf(this.state.account).call();\n\n              case 14:\n                tetherBalance = _context2.sent;\n                this.setState({\n                  tetherBalance: tetherBalance.toString()\n                });\n                _context2.next = 19;\n                break;\n\n              case 18:\n                window.alert(\"tether contract not deployed to detect network\");\n\n              case 19:\n                rwdData = RWD.networks[networkId];\n\n                if (!rwdData) {\n                  _context2.next = 28;\n                  break;\n                }\n\n                rwd = new web3.eth.Contract(RWD.abi, rwdData.address);\n                _context2.next = 24;\n                return rwd.methods.balanceOf(this.state.account).call();\n\n              case 24:\n                rwdBalance = _context2.sent;\n                this.setState({\n                  rwdBalance: rwdBalance.toString(),\n                  rwd: rwd\n                });\n                _context2.next = 29;\n                break;\n\n              case 28:\n                window.alert(\"Contract not deployed on the blockchain\");\n\n              case 29:\n                decentralBankData = DecentralBank.networks[networkId];\n\n                if (!decentralBankData) {\n                  _context2.next = 39;\n                  break;\n                }\n\n                decentralBank = new web3.eth.Contract(DecentralBank.abi, decentralBankData.address);\n                this.setState({\n                  decentralBank: decentralBank\n                });\n                _context2.next = 35;\n                return decentralBank.methods.stakingBalance(this.state.account).call();\n\n              case 35:\n                stakingBalance = _context2.sent;\n                this.setState({\n                  stakingBalance: stakingBalance.toString()\n                }); // console.log(\"staking balance\", stakingBalance);\n\n                _context2.next = 40;\n                break;\n\n              case 39:\n                window.alert(\"Contract not deployed on the blockchain\");\n\n              case 40:\n                this.setState({\n                  loading: false\n                });\n\n              case 41:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }, {\n    key: \"UNSAFE_componentWillMount\",\n    value: function () {\n      var _UNSAFE_componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context3.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function UNSAFE_componentWillMount() {\n        return _UNSAFE_componentWillMount.apply(this, arguments);\n      }\n\n      return UNSAFE_componentWillMount;\n    }() //function to stake tokens - using deposit button\n\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.stakeTokens = function (amount) {\n      _this.setState({\n        loading: true\n      });\n\n      _this.stakeTokens.tether.methods.approve(_this.state.decentralBank._address, amount).send({\n        from: _this.state.account\n      }).on(\"transactionHash\", function (hash) {\n        _this.stakeTokens.decentralBank.methods.depositTokens(amount).send({\n          from: _this.state.account\n        }).on(\"transactionHash\", function (hash) {\n          _this.setState({\n            loading: false\n          });\n        });\n      });\n    };\n\n    _this.unstakeTokens = function () {\n      _this.setState({\n        loading: true\n      });\n\n      _this.state.decentralBank.methods.unstakeTokens().send({\n        from: _this.state.account\n      }).on(\"transactionHash\", function (hash) {\n        _this.setState({\n          loading: false\n        });\n      });\n    };\n\n    _this.state = {\n      account: \"loading\",\n      tether: {},\n      rwd: {},\n      decentralBank: {},\n      stakingBalance: \"0\",\n      tetherBalance: \"0\",\n      rewardBalance: \"0\",\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _React$createElement;\n\n      var content;\n      {\n        this.state.loading ? content = /*#__PURE__*/React.createElement(\"p\", {\n          id: \"loader\",\n          className: \"text-center\",\n          style: {\n            margin: \"30px\",\n            fontStyle: \"italic\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }\n        }, \"Loading please...\") : content = /*#__PURE__*/React.createElement(Main, {\n          stakingBalance: this.state.stakingBalance,\n          rewardBalance: this.state.rewardBalance,\n          tetherBalance: this.state.tetherBalance,\n          loading: this.state.loading,\n          statkeTokens: this.stakeTokens,\n          unstakeTokens: this.unstakeTokens,\n          decentralBank: this.decentralBank,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }\n        });\n      }\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Navbar, {\n        account: this.state.account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container-fluid mt-5 \" // style={{ maxWidth: \"600px\", minHeight: \"100vm\" }}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"main\", (_React$createElement = {\n        role: \"main\",\n        className: \"col-lg-12 ml-auto mr-auto\",\n        style: {\n          maxWidth: \"600px\"\n        }\n      }, _defineProperty(_React$createElement, \"style\", {\n        minHeight: \"100vm\"\n      }), _defineProperty(_React$createElement, \"__self\", this), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }), _React$createElement), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 15\n        }\n      }, content)))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/kunal/BLOCKCHAIN/defi-staking-app-starter/defi-staking-app-starter/src/components/App.js"],"names":["React","Component","Navbar","Main","Web3","Tether","RWD","DecentralBank","App","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","setState","account","net","getId","networkId","tetherData","networks","tether","Contract","abi","address","methods","balanceOf","state","call","tetherBalance","toString","rwdData","rwd","rwdBalance","decentralBankData","decentralBank","stakingBalance","loading","loadWeb3","loadBlockchainData","props","stakeTokens","amount","approve","_address","send","from","on","hash","depositTokens","unstakeTokens","rewardBalance","content","margin","fontStyle","maxWidth","minHeight"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Navbar from \"./navbar\";\nimport Main from \"./Main\";\nimport Web3 from \"web3\";\nimport Tether from \"../truffle_abis/Tether.json\";\nimport RWD from \"../truffle_abis/RWD.json\";\nimport DecentralBank from \"../truffle_abis/DecentralBank.json\";\n\nclass App extends Component {\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\"No ethereum detected! check your metamask\");\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    const accounts = await web3.eth.getAccounts();\n    this.setState({ account: accounts[0] });\n    const networkId = await web3.eth.net.getId();\n    // console.log(networkId);\n\n    //LOAD Tether TOKEN\n    const tetherData = Tether.networks[networkId];\n    if (tetherData) {\n      const tether = new web3.eth.Contract(Tether.abi, tetherData.address);\n      this.setState({ tether });\n      let tetherBalance = await tether.methods\n        .balanceOf(this.state.account)\n        .call();\n      this.setState({ tetherBalance: tetherBalance.toString() });\n    } else {\n      window.alert(\"tether contract not deployed to detect network\");\n    }\n\n    const rwdData = RWD.networks[networkId];\n    if (rwdData) {\n      const rwd = new web3.eth.Contract(RWD.abi, rwdData.address);\n      let rwdBalance = await rwd.methods.balanceOf(this.state.account).call();\n      this.setState({\n        rwdBalance: rwdBalance.toString(),\n        rwd: rwd,\n      });\n    } else {\n      window.alert(\"Contract not deployed on the blockchain\");\n    }\n\n    const decentralBankData = DecentralBank.networks[networkId];\n    if (decentralBankData) {\n      const decentralBank = new web3.eth.Contract(\n        DecentralBank.abi,\n        decentralBankData.address\n      );\n      this.setState({ decentralBank });\n      let stakingBalance = await decentralBank.methods\n        .stakingBalance(this.state.account)\n        .call();\n      this.setState({ stakingBalance: stakingBalance.toString() });\n      // console.log(\"staking balance\", stakingBalance);\n    } else {\n      window.alert(\"Contract not deployed on the blockchain\");\n    }\n\n    this.setState({ loading: false });\n  }\n\n  async UNSAFE_componentWillMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  }\n\n  //function to stake tokens - using deposit button\n  stakeTokens = (amount) => {\n    this.setState({ loading: true });\n    this.stakeTokens.tether.methods\n      .approve(this.state.decentralBank._address, amount)\n      .send({ from: this.state.account })\n      .on(\"transactionHash\", (hash) => {\n        this.stakeTokens.decentralBank.methods\n          .depositTokens(amount)\n          .send({ from: this.state.account })\n          .on(\"transactionHash\", (hash) => {\n            this.setState({ loading: false });\n          });\n      });\n  };\n\n  //Unstaking the tokens--the function yhat is called upon clicking the withdraw button\n  unstakeTokens = () => {\n    this.setState({ loading: true });\n    this.state.decentralBank.methods\n      .unstakeTokens()\n      .send({ from: this.state.account })\n      .on(\"transactionHash\", (hash) => {\n        this.setState({ loading: false });\n      });\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: \"loading\",\n      tether: {},\n      rwd: {},\n      decentralBank: {},\n      stakingBalance: \"0\",\n      tetherBalance: \"0\",\n      rewardBalance: \"0\",\n      loading: true,\n    };\n  }\n  render() {\n    let content;\n    {\n      this.state.loading\n        ? (content = (\n            <p\n              id=\"loader\"\n              className=\"text-center\"\n              style={{ margin: \"30px\", fontStyle: \"italic\" }}\n            >\n              Loading please...\n            </p>\n          ))\n        : (content = (\n            <Main\n              stakingBalance={this.state.stakingBalance}\n              rewardBalance={this.state.rewardBalance}\n              tetherBalance={this.state.tetherBalance}\n              loading={this.state.loading}\n              statkeTokens={this.stakeTokens}\n              unstakeTokens={this.unstakeTokens}\n              decentralBank={this.decentralBank}\n            />\n          ));\n    }\n    return (\n      <React.Fragment>\n        <Navbar account={this.state.account} />\n        <div\n          className=\"container-fluid mt-5 \"\n          // style={{ maxWidth: \"600px\", minHeight: \"100vm\" }}\n        >\n          <div className=\"row\">\n            <main\n              role=\"main\"\n              className=\"col-lg-12 ml-auto mr-auto\"\n              style={{ maxWidth: \"600px\" }}\n              style={{ minHeight: \"100vm\" }}\n            >\n              <div>{content}</div>\n            </main>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}